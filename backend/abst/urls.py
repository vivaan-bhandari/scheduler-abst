"""
URL configuration for abst project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Import the include() function: from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""

from django.contrib import admin
from django.urls import path, include
from django.http import JsonResponse, HttpResponse
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_http_methods
from django.views.decorators.common import no_append_slash
from rest_framework.routers import DefaultRouter
from adls.views import ADLViewSet
from residents.views import ResidentViewSet, FacilityViewSet, FacilitySectionViewSet
from users.views import UserViewSet, FacilityAccessViewSet
from scheduling.views import (
    StaffViewSet, ShiftTemplateViewSet, ShiftViewSet, StaffAssignmentViewSet,
    StaffAvailabilityViewSet, AIInsightViewSet, AIRecommendationViewSet,
    SchedulingDashboardViewSet
)

router = DefaultRouter()
router.register(r'adls', ADLViewSet)
router.register(r'residents', ResidentViewSet)
router.register(r'users', UserViewSet)
router.register(r'facilities', FacilityViewSet)
router.register(r'facilitysections', FacilitySectionViewSet)
router.register(r'facility-access', FacilityAccessViewSet, basename='facility-access')
router.register(r'scheduling/staff', StaffViewSet)
router.register(r'scheduling/shift-templates', ShiftTemplateViewSet)
router.register(r'scheduling/shifts', ShiftViewSet)
router.register(r'scheduling/assignments', StaffAssignmentViewSet)
router.register(r'scheduling/availability', StaffAvailabilityViewSet)
router.register(r'scheduling/ai-insights', AIInsightViewSet)
router.register(r'scheduling/ai-recommendations', AIRecommendationViewSet)
router.register(r'scheduling/dashboard', SchedulingDashboardViewSet, basename='scheduling-dashboard')

@csrf_exempt
def healthcheck(request):
    return JsonResponse({"status": "healthy", "message": "Django app is running"})

@csrf_exempt
def root_healthcheck(request):
    # This endpoint is specifically for Railway healthcheck on root path /
    # Return a simple response that bypasses Django's host validation
    # Use raw HttpResponse with minimal content
    return HttpResponse(
        'OK',
        content_type='text/plain',
        status=200
    )

urlpatterns = [
    path("", root_healthcheck, name="root_healthcheck"),  # Root path for Railway healthcheck
    path("admin/", admin.site.urls),
    path("api/", include(router.urls)),
    path("health/", healthcheck, name="healthcheck"),
]
